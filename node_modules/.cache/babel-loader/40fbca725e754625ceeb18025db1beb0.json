{"ast":null,"code":"var _jsxFileName = \"/Users/gracehan/flight-search/src/components/FlightSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './FlightSearch.css';\nimport Places from './Places';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FlightSearch() {\n  _s();\n\n  const [places, setPlaces] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [showPlaces, setShowPlaces] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    async function fetchMyAPI() {\n      const reqOptions = {\n        method: 'GET',\n        headers: {\n          \"x-rapidapi-key\": '8e6b478235msh794d79dac0c98e3p1b6440jsnb32c209b38dc',\n          \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n          \"useQueryString\": true\n        }\n      };\n      let response = await fetch('https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?' + new URLSearchParams({\n        query: query\n      }), reqOptions);\n      response = await response.json();\n      setPlaces(response.Places);\n    }\n\n    fetchMyAPI();\n    setShowPlaces(true);\n    setQuery(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flightsearch\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"originplace\",\n        children: \"From:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"originplace\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"destinationplace\",\n        children: \"To:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"destinationplace\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"When:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this), showPlaces ? /*#__PURE__*/_jsxDEV(Places, {\n      places: places\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FlightSearch, \"JSX7o15kTxRGrYkVKJY0MKbqIcE=\");\n\n_c = FlightSearch;\nexport default FlightSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlightSearch\");","map":{"version":3,"sources":["/Users/gracehan/flight-search/src/components/FlightSearch.js"],"names":["React","useState","Places","FlightSearch","places","setPlaces","query","setQuery","showPlaces","setShowPlaces","handleSubmit","e","preventDefault","fetchMyAPI","reqOptions","method","headers","response","fetch","URLSearchParams","json","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBJ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACO,UAAD,EAAYC,aAAZ,IAA6BR,QAAQ,CAAC,KAAD,CAA3C;;AAEA,WAASS,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;;AACA,mBAAeC,UAAf,GAA4B;AACxB,YAAMC,UAAU,GAAG;AACfC,QAAAA,MAAM,EAAE,KADO;AAEfC,QAAAA,OAAO,EAAE;AACL,4BAAkB,oDADb;AAER,6BAAmB,uDAFX;AAGR,4BAAkB;AAHV;AAFM,OAAnB;AAQA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8GAA8G,IAAIC,eAAJ,CAAoB;AAACb,QAAAA,KAAK,EAAEA;AAAR,OAApB,CAA/G,EAAoJQ,UAApJ,CAA1B;AACAG,MAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACG,IAAT,EAAjB;AACAf,MAAAA,SAAS,CAACY,QAAQ,CAACf,MAAV,CAAT;AACH;;AACDW,IAAAA,UAAU;AACVJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACG;AAAM,MAAA,QAAQ,EAAEG,YAAhB;AAAA,8BACK;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAO,QAAA,EAAE,EAAC,aAAV;AAAwB,QAAA,KAAK,EAAEJ,KAA/B;AAAsC,QAAA,QAAQ,EAAEK,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACU,MAAF,CAASC,KAAV,CAA7D;AAA+E,QAAA,QAAQ;AAAvF;AAAA;AAAA;AAAA;AAAA,cAFL,eAGK;AAAO,QAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHL,eAIK;AAAO,QAAA,EAAE,EAAC,kBAAV;AAA6B,QAAA,KAAK,EAAEhB,KAApC;AAA2C,QAAA,QAAQ,EAAEK,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACU,MAAF,CAASC,KAAV,CAAlE;AAAoF,QAAA,QAAQ;AAA5F;AAAA;AAAA;AAAA;AAAA,cAJL,eAKK;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALL,eAMK;AAAO,QAAA,EAAE,EAAC,MAAV;AAAiB,QAAA,KAAK,EAAEhB,KAAxB;AAA+B,QAAA,QAAQ,EAAEK,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACU,MAAF,CAASC,KAAV,CAAtD;AAAwE,QAAA,QAAQ;AAAhF;AAAA;AAAA;AAAA;AAAA,cANL,eAOK;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPL;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAUKd,UAAU,gBAAG,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEJ;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAuC,qCAVtD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAvCQD,Y;;KAAAA,Y;AAyCT,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport './FlightSearch.css';\nimport Places from './Places';\n\nfunction FlightSearch() { \n    const [places,setPlaces] = useState([])\n    const [query,setQuery] = useState(\"\")\n    const [showPlaces,setShowPlaces] = useState(false)\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        async function fetchMyAPI() {\n            const reqOptions = {\n                method: 'GET',\n                headers: {\n                    \"x-rapidapi-key\": '8e6b478235msh794d79dac0c98e3p1b6440jsnb32c209b38dc',\n\t                \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n\t                \"useQueryString\": true\n                }\n            }\n            let response = await fetch('https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?' + new URLSearchParams({query: query}), reqOptions)\n            response = await response.json()\n            setPlaces(response.Places)\n        }\n        fetchMyAPI()\n        setShowPlaces(true)\n        setQuery(\"\")\n    }\n\n    return(\n        <div className=\"flightsearch\">\n           <form onSubmit={handleSubmit}>\n                <label htmlFor=\"originplace\">From:</label>\n                <input id=\"originplace\" value={query} onChange={e => setQuery(e.target.value)} required/>\n                <label htmlFor=\"destinationplace\">To:</label>\n                <input id=\"destinationplace\" value={query} onChange={e => setQuery(e.target.value)} required/>\n                <label htmlFor=\"date\">When:</label>\n                <input id=\"date\" value={query} onChange={e => setQuery(e.target.value)} required/>\n                <button className=\"search\">Submit</button>\n           </form>\n           { showPlaces ? <Places places={places}></Places> : <></>}\n        </div>\n    )\n}\n\nexport default FlightSearch;\n"]},"metadata":{},"sourceType":"module"}