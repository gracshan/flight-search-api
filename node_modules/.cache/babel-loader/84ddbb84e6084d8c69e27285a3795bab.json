{"ast":null,"code":"var _jsxFileName = \"/Users/gracehan/flight-search/src/components/FlightSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './FlightSearch.css';\nimport Places from './Places';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FlightSearch() {\n  _s();\n\n  const [quotes, setQuotes] = useState([]);\n  const [originPlace, setOriginPlace] = useState(\"\");\n  const [destinationPlace, setDestinationPlace] = useState(\"\");\n  const [outboundPartialDate, setoutboundPartialDate] = useState(\"\");\n  const [showQuotes, setShowQuotes] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    async function fetchMyAPI() {\n      const reqOptions = {\n        method: 'GET',\n        headers: {\n          \"x-rapidapi-key\": '8e6b478235msh794d79dac0c98e3p1b6440jsnb32c209b38dc',\n          \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n          \"useQueryString\": true\n        }\n      };\n      let response = await fetch('https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/USD/en-US/?' + new URLSearchParams({\n        orginPlace: originPlace\n      }) + new URLSearchParams({\n        destinationPlace,\n        destinationPlace\n      }) + new URLSearchParams({\n        outboundPartialDate: outboundPartialDate\n      }), reqOptions);\n      response = await response.json();\n      setQuotes(response.Quotes);\n    }\n\n    fetchMyAPI();\n    setShowQuotes(true);\n    setQuery(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flightsearch\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"originPlace\",\n        children: \"From: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"originPlace\",\n        value: orginPlace,\n        onChange: e => setOriginPlace(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"destinationPlace\",\n        children: \" To: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"destinationPlace\",\n        value: destinationPlace,\n        onChange: e => setDestinationPlace(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"outboundPartialDate\",\n        children: \" When: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"outboundPartialDate\",\n        value: outboundPartialDate,\n        onChange: e => setoutboundPartialDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this), showQuotes ? /*#__PURE__*/_jsxDEV(Places, {\n      quotes: quotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FlightSearch, \"OAXbqFi84Hqi8ojBfY9WV7I9WB0=\");\n\n_c = FlightSearch;\nexport default FlightSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlightSearch\");","map":{"version":3,"sources":["/Users/gracehan/flight-search/src/components/FlightSearch.js"],"names":["React","useState","Places","FlightSearch","quotes","setQuotes","originPlace","setOriginPlace","destinationPlace","setDestinationPlace","outboundPartialDate","setoutboundPartialDate","showQuotes","setShowQuotes","handleSubmit","e","preventDefault","fetchMyAPI","reqOptions","method","headers","response","fetch","URLSearchParams","orginPlace","json","Quotes","setQuery","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBJ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACK,WAAD,EAAaC,cAAb,IAA+BN,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACO,gBAAD,EAAkBC,mBAAlB,IAAyCR,QAAQ,CAAC,EAAD,CAAvD;AACA,QAAM,CAACS,mBAAD,EAAqBC,sBAArB,IAA+CV,QAAQ,CAAC,EAAD,CAA7D;AACA,QAAM,CAACW,UAAD,EAAYC,aAAZ,IAA6BZ,QAAQ,CAAC,KAAD,CAA3C;;AAEA,WAASa,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;;AACA,mBAAeC,UAAf,GAA4B;AACxB,YAAMC,UAAU,GAAG;AACfC,QAAAA,MAAM,EAAE,KADO;AAEfC,QAAAA,OAAO,EAAE;AACL,4BAAkB,oDADb;AAER,6BAAmB,uDAFX;AAGR,4BAAkB;AAHV;AAFM,OAAnB;AAQA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+GAA+G,IAAIC,eAAJ,CAAoB;AAACC,QAAAA,UAAU,EAAElB;AAAb,OAApB,CAA/G,GAA+J,IAAIiB,eAAJ,CAAoB;AAACf,QAAAA,gBAAD;AAAmBA,QAAAA;AAAnB,OAApB,CAA/J,GAA0N,IAAIe,eAAJ,CAAoB;AAACb,QAAAA,mBAAmB,EAAEA;AAAtB,OAApB,CAA3N,EAA4RQ,UAA5R,CAA1B;AACAG,MAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACI,IAAT,EAAjB;AACApB,MAAAA,SAAS,CAACgB,QAAQ,CAACK,MAAV,CAAT;AACH;;AACDT,IAAAA,UAAU;AACVJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAc,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACG;AAAM,MAAA,QAAQ,EAAEb,YAAhB;AAAA,8BACK;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAO,QAAA,EAAE,EAAC,aAAV;AAAwB,QAAA,KAAK,EAAEU,UAA/B;AAA2C,QAAA,QAAQ,EAAET,CAAC,IAAIR,cAAc,CAACQ,CAAC,CAACa,MAAF,CAASC,KAAV,CAAxE;AAA0F,QAAA,QAAQ;AAAlG;AAAA;AAAA;AAAA;AAAA,cAFL,eAGK;AAAO,QAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHL,eAIK;AAAO,QAAA,EAAE,EAAC,kBAAV;AAA6B,QAAA,KAAK,EAAErB,gBAApC;AAAsD,QAAA,QAAQ,EAAEO,CAAC,IAAIN,mBAAmB,CAACM,CAAC,CAACa,MAAF,CAASC,KAAV,CAAxF;AAA0G,QAAA,QAAQ;AAAlH;AAAA;AAAA;AAAA;AAAA,cAJL,eAKK;AAAO,QAAA,OAAO,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALL,eAMK;AAAO,QAAA,EAAE,EAAC,qBAAV;AAAgC,QAAA,KAAK,EAAEnB,mBAAvC;AAA4D,QAAA,QAAQ,EAAEK,CAAC,IAAIJ,sBAAsB,CAACI,CAAC,CAACa,MAAF,CAASC,KAAV,CAAjG;AAAmH,QAAA,QAAQ;AAA3H;AAAA;AAAA;AAAA;AAAA,cANL,eAOK;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPL;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAUKjB,UAAU,gBAAG,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAER;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAuC,qCAVtD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAzCQD,Y;;KAAAA,Y;AA2CT,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport './FlightSearch.css';\nimport Places from './Places';\n\nfunction FlightSearch() { \n    const [quotes,setQuotes] = useState([])\n    const [originPlace,setOriginPlace] = useState(\"\")\n    const [destinationPlace,setDestinationPlace] = useState(\"\")\n    const [outboundPartialDate,setoutboundPartialDate] = useState(\"\")\n    const [showQuotes,setShowQuotes] = useState(false)\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        async function fetchMyAPI() {\n            const reqOptions = {\n                method: 'GET',\n                headers: {\n                    \"x-rapidapi-key\": '8e6b478235msh794d79dac0c98e3p1b6440jsnb32c209b38dc',\n\t                \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n\t                \"useQueryString\": true\n                }\n            }\n            let response = await fetch('https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/USD/en-US/?' + new URLSearchParams({orginPlace: originPlace})+ new URLSearchParams({destinationPlace, destinationPlace})+ new URLSearchParams({outboundPartialDate: outboundPartialDate}), reqOptions)\n            response = await response.json()\n            setQuotes(response.Quotes)\n        }\n        fetchMyAPI()\n        setShowQuotes(true)\n        setQuery(\"\")\n    }\n\n    return(\n        <div className=\"flightsearch\">\n           <form onSubmit={handleSubmit}>\n                <label htmlFor=\"originPlace\">From: </label>\n                <input id=\"originPlace\" value={orginPlace} onChange={e => setOriginPlace(e.target.value)} required/>\n                <label htmlFor=\"destinationPlace\"> To: </label>\n                <input id=\"destinationPlace\" value={destinationPlace} onChange={e => setDestinationPlace(e.target.value)} required/>\n                <label htmlFor=\"outboundPartialDate\"> When: </label>\n                <input id=\"outboundPartialDate\" value={outboundPartialDate} onChange={e => setoutboundPartialDate(e.target.value)} required/>\n                <button className=\"search\">Submit</button>\n           </form>\n           { showQuotes ? <Places quotes={quotes}></Places> : <></>}\n        </div>\n    )\n}\n\nexport default FlightSearch;\n"]},"metadata":{},"sourceType":"module"}