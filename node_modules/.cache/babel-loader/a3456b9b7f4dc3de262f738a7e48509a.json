{"ast":null,"code":"var _jsxFileName = \"/Users/gracehan/flight-search-api/src/components/Flights.js\";\nimport React from \"react\";\nimport \"./Flights.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Flights(props) {\n  const quotes = props.flights.Quotes;\n  const places = props.flights.Places;\n  const currencies = props.flights.Currencies;\n  const carriers = props.flights.Carriers;\n\n  function formatCurrency(price) {\n    if (currencies[0].SymbolOnLeft) {\n      return currencies[0].Symbol + price;\n    }\n\n    return price + currencies[0].Symbol;\n  }\n\n  function namePlace(placeid) {\n    if (placeid === places[0].PlaceID) {\n      return places[0].Name;\n    }\n\n    return places[1].Name;\n  }\n\n  function nameCarrier(carrierid) {\n    for (let i = 0; i < carriers.length; i++) {\n      if (carrierid === carriers[i].CarrierId) {\n        return carriers[i].Name;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quotes\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Depart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Return\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Carrier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: quotes != null ? quotes.map(quote => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            id: \"tableinput\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: namePlace(quote.OutboundLeg.OriginID)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: namePlace(quote.OutboundLeg.DestinationId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: formatCurrency(quote.MinPrice)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: quote.OutboundLeg.DepartureDate.split(\"T\")[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: quote.InboundLeg.DepartureDate.split(\"T\")[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: nameCarrier(quote.OutboundLeg.CarrierIds[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)]\n          }, quote.QuoteId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No results available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Flights;\nexport default Flights;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flights\");","map":{"version":3,"sources":["/Users/gracehan/flight-search-api/src/components/Flights.js"],"names":["React","Flights","props","quotes","flights","Quotes","places","Places","currencies","Currencies","carriers","Carriers","formatCurrency","price","SymbolOnLeft","Symbol","namePlace","placeid","PlaceID","Name","nameCarrier","carrierid","i","length","CarrierId","map","quote","OutboundLeg","OriginID","DestinationId","MinPrice","DepartureDate","split","InboundLeg","CarrierIds","QuoteId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Flights.css\";\n\nfunction Flights(props) {\n    const quotes = props.flights.Quotes\n    const places = props.flights.Places\n    const currencies = props.flights.Currencies\n    const carriers = props.flights.Carriers  \n\n    function formatCurrency(price) {\n        if (currencies[0].SymbolOnLeft) {\n            return currencies[0].Symbol + price\n        }\n        return price + currencies[0].Symbol\n    }\n\n    function namePlace(placeid) {\n        if (placeid === places[0].PlaceID) {\n            return places[0].Name\n        }\n        return places[1].Name\n    }\n    function nameCarrier(carrierid) {\n        for (let i=0; i < carriers.length; i++) {\n            if (carrierid === carriers[i].CarrierId) {\n                return carriers[i].Name\n            }\n        }\n    }\n\n    return (\n        <div className=\"quotes\">\n            <table>\n            <thead>\n                <tr>\n                <th>From</th>\n                <th>To</th>\n                <th>Price</th>\n                <th>Depart</th>\n                <th>Return</th>\n                <th>Carrier</th>\n                </tr>\n            </thead>\n            <tbody>\n                {quotes != null ? (\n                quotes.map((quote) => {\n                    return (\n                    <tr id={\"tableinput\"} key={quote.QuoteId}>\n                        <th>{namePlace(quote.OutboundLeg.OriginID)}</th>\n                        <th>{namePlace(quote.OutboundLeg.DestinationId)}</th>\n                        <th>{formatCurrency(quote.MinPrice)}</th>\n                        <th>{quote.OutboundLeg.DepartureDate.split(\"T\")[0]}</th>\n                        <th>{quote.InboundLeg.DepartureDate.split(\"T\")[0]}</th>\n                        <th>{nameCarrier(quote.OutboundLeg.CarrierIds[0])}</th>\n                    </tr>\n                    );\n                })\n                ) : (\n                <div>No results available.</div>\n                )}\n            </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Flights;"]},"metadata":{},"sourceType":"module"}