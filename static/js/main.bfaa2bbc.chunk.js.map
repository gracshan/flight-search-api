{"version":3,"sources":["components/Header.js","components/Footer.js","components/Flights.js","components/FlightSearch.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Footer","Flights","quotes","flights","Quotes","places","Places","currencies","Currencies","carriers","Carriers","findCheapestPrice","cheapestPrice","MinPrice","i","length","namePlace","placeid","PlaceId","Name","nameCarrier","carrierid","CarrierId","map","quote","id","style","backgroundColor","OutboundLeg","OriginId","DestinationId","price","SymbolOnLeft","Symbol","DepartureDate","split","InboundLeg","CarrierIds","QuoteId","FlightSearch","useState","flightsInfo","setFlightsInfo","originPlace","setOriginPlace","destinationPlace","setDestinationPlace","outboundPartialDate","setOutboundPartialDate","inboundPartialDate","setInboundPartialDate","showFlights","setShowFlights","currencyList","setCurrencyList","currencySelected","setCurrencySelected","sortByCheapest","setSortByCheapest","fetch","method","headers","process","then","response","json","data","temp","forEach","e","push","label","Code","value","catch","err","console","error","onSubmit","a","reqOptions","encodeURIComponent","linkResponse","linkResult","log","sort","b","preventDefault","fetchMyAPI","r","htmlFor","placeholder","onChange","target","required","type","option","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfaa2bbc.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header(props) { \n    return(\n        <div className=\"header\">\n            {props.title}\n         </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(props) { \n    return(\n        <div className=\"footer\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Footer;","import React, { useState } from \"react\";\nimport \"./Flights.css\";\n\nfunction Flights(props) {\n  const quotes = props.flights.Quotes;\n  const places = props.flights.Places;\n  const currencies = props.flights.Currencies;\n  const carriers = props.flights.Carriers;\n\n  // find cheapest price\n  function findCheapestPrice () {\n    let cheapestPrice = quotes[0].MinPrice;\n    for (let i=1; i < quotes.length;i++) {\n      if (cheapestPrice > quotes[i].MinPrice) {\n          cheapestPrice = (quotes[i].MinPrice);\n      }\n    }\n    return cheapestPrice\n  }\n\n  // return price display according to given currency\n  function formatCurrency(price) {\n    if (currencies[0].SymbolOnLeft) {\n      return currencies[0].Symbol + price;\n    }\n    return price + currencies[0].Symbol;\n  }\n\n  // return name of place that has corresponding placeid\n  function namePlace(placeid) {\n    if (placeid === places[0].PlaceId) {\n      return places[0].Name;\n    }\n    return places[1].Name;\n  }\n\n  // return name of carrier that has corresponding carrierid\n  function nameCarrier(carrierid) {\n    for (let i = 0; i < carriers.length; i++) {\n      if (carrierid === carriers[i].CarrierId) {\n        return carriers[i].Name;\n      }\n    }\n  }\n\n  // return true if quote has inbound leg, false otherwise\n  function checkInbound() {\n    if (\"InboundLeg\" in quotes[0]) {\n      return true;\n    }\n    return false;\n  }\n\n  return (\n    <div className=\"quotes\">\n      <table>\n        <thead>\n          <tr>\n            <th>From</th>\n            <th>To</th>\n            <th>Price</th>\n            <th>Depart</th>\n            <th>Return</th>\n            <th>Carrier</th>\n          </tr>\n        </thead>\n        <tbody>\n          {quotes != null ? (\n            quotes.map((quote) => {\n              return (\n                <tr \n                id={\"tableinput\"} \n                key={quote.QuoteId} \n                style={\n                  quote.MinPrice === findCheapestPrice()\n                    ? { backgroundColor: \"#FFD700\" }\n                    : { backgroundColor: \"#FFFFFF\" }\n                }\n                >\n                  <th>{namePlace(quote.OutboundLeg.OriginId)}</th>\n                  <th>{namePlace(quote.OutboundLeg.DestinationId)}</th>\n                  <th>{formatCurrency(quote.MinPrice)}</th>\n                  <th>{quote.OutboundLeg.DepartureDate.split(\"T\")[0]}</th>\n                  <th>\n                    {checkInbound()\n                      ? quote.InboundLeg.DepartureDate.split(\"T\")[0]\n                      : \"N/A\"}\n                  </th>\n                  <th>{nameCarrier(quote.OutboundLeg.CarrierIds[0])}</th>\n                </tr>\n              );\n            })\n          ) : (\n            <div>No results available.</div>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Flights;\n","import React, { useState } from \"react\";\nimport \"./FlightSearch.css\";\nimport Flights from \"./Flights\";\n\nfunction FlightSearch() {\n  const [flightsInfo, setFlightsInfo] = useState({});\n  const [originPlace, setOriginPlace] = useState(\"\"); // must be one of valid PlaceId\n  const [destinationPlace, setDestinationPlace] = useState(\"\"); // must be one of valid PlaceId\n  const [outboundPartialDate, setOutboundPartialDate] = useState(\"\");\n  const [inboundPartialDate, setInboundPartialDate] = useState(\"\");\n  const [showFlights, setShowFlights] = useState(false);\n  const [currencyList, setCurrencyList] = useState([]);\n  const [currencySelected, setCurrencySelected] = useState(\"USD\");\n  const [sortByCheapest, setSortByCheapest] = useState(0);\n\n  if (currencyList.length === 0) {\n    // fetch list of valid currencies\n    fetch(\n      \"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/reference/v1.0/currencies\",\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`,\n          \"x-rapidapi-host\":\n            \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n        },\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (data) {\n        let temp = [];\n        data.Currencies.forEach((e) =>\n          temp.push({ label: e.Code, value: e.Code })\n        );\n        setCurrencyList(temp);\n        return;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function handleSubmit(e) {\n    setShowFlights(false)\n    e.preventDefault();\n    async function fetchMyAPI() {\n      const reqOptions = {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`,\n          \"x-rapidapi-host\":\n            \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n        },\n      };\n\n      const linkResponse = await fetch(\n        `https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/${encodeURIComponent(\n          currencySelected\n        )}/en-US/${encodeURIComponent(\n          originPlace + \"-sky\"\n        )}/${encodeURIComponent(\n          destinationPlace + \"-sky\"\n        )}/${encodeURIComponent(outboundPartialDate)}/${encodeURIComponent(\n          inboundPartialDate\n        )}`,\n        reqOptions\n      );\n\n      // sort quotes generated \n      let linkResult = await linkResponse.json();\n      console.log(linkResult);\n      try {\n        linkResult.Quotes.sort(function (a, b) {\n          if (sortByCheapest == 1) {\n            return b.MinPrice - a.MinPrice;\n          }\n          return a.MinPrice - b.MinPrice;\n        });\n        setFlightsInfo(linkResult);\n      }\n      catch(err) {\n        setFlightsInfo({});\n      }\n    }\n\n    fetchMyAPI().then((r) => setShowFlights(true));\n  }\n\n  return (\n    <div className=\"flightsearch\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"originPlace\">From: </label>\n        <input\n          id=\"originPlace\"\n          placeholder= 'Place ID(SFO)'\n          value={originPlace}\n          onChange={(e) => setOriginPlace(e.target.value)}\n          required\n        />\n        <label htmlFor=\"destinationPlace\"> To: </label>\n        <input\n          id=\"destinationPlace\"\n          placeholder= 'Place ID(LAX)'\n          value={destinationPlace}\n          onChange={(e) => setDestinationPlace(e.target.value)}\n          required\n        />\n        <label htmlFor=\"outboundPartialDate\"> Depart: </label>\n        <input\n          id=\"outboundPartialDate\"\n          value={outboundPartialDate}\n          onChange={(e) => setOutboundPartialDate(e.target.value)}\n          type=\"date\"\n          required\n        />\n        <label htmlFor=\"inboundPartialDate\"> Return: </label>\n        <input\n          id=\"inboundPartialDate\"\n          value={inboundPartialDate}\n          onChange={(e) => setInboundPartialDate(e.target.value)}\n          type=\"date\"\n        />\n        <label htmlFor=\"currency\"> Currency: </label>\n\n        <select\n          id=\"currency\"\n          value={currencySelected}\n          onChange={(e) => setCurrencySelected(e.target.value)}\n        >\n          {currencyList.map((option) => (\n            <option value={option.value}>{option.label}</option>\n          ))}\n        </select>\n\n        <label htmlFor=\"sortBy\"> Price: </label>\n\n        <select\n          id=\"sortpicker\"\n          value={sortByCheapest}\n          onChange={(e) => setSortByCheapest(e.target.value)}\n        >\n          <option value={0}>{\"Lowest\"}</option>\n          <option value={1}>{\"Highest\"}</option>\n        </select>\n\n        <button className=\"search\">Submit</button>\n      </form>\n      {showFlights ? <Flights flights={flightsInfo}></Flights> : <></>}\n    </div>\n  );\n}\n\nexport default FlightSearch;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport FlightSearch from './components/FlightSearch';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title=\"Golden Flight Search\"></Header>\n      <FlightSearch></FlightSearch>\n      <Footer title=\"2021 || Made with &#x2665; in Ithaca\"></Footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}